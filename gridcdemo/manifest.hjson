//

/*@****************************************************************************
*
*   █████╗ ███╗   ███╗ ██████╗ ███████╗    ██████╗
*  ██╔══██╗████╗ ████║██╔═══██╗██╔════╝    ╚════██╗
*  ███████║██╔████╔██║██║   ██║███████╗     █████╔╝
*  ██╔══██║██║╚██╔╝██║██║   ██║╚════██║    ██╔═══╝
*  ██║  ██║██║ ╚═╝ ██║╚██████╔╝███████║    ███████╗
*  ╚═╝  ╚═╝╚═╝     ╚═╝ ╚═════╝ ╚══════╝    ╚══════╝
*
****************************************************************************@*/
/** @file
 *
 * AMOS 2 Application Manifest
 *
 */
{
	// Version of the manifest
	version: "6"

	// Informations about the application
	infos:
	{
		applicationName: "Paralbounce."
		author: "By Giovanni Cardona"
		version: "Version 1.0"
		date: "Sep. 2019"
		copyright: "(c) Evermagica"
		start: "main.amos"
	}

	// Compilation mode
	// ----------------
	compilation:
	{
		speed: "fast"					// safe / fair / graphics / fast
		syntax: "amos2"					// amos1.3 / amosPro / amos2. Default = amosPro
		emulation: "PC"					// 500 / 600 / 1200 / 3000 / 4000 / PC. Default = 1200
		usePalette: true				// true / false. Default = true
		useShortColors: false			// true / false. Default = true
		showCopperBlack: false			// true / false. Default = true -> will show the 'empty lines' above each screen and the black areas on the left/right of them
		unlimitedScreens: true			// true / false. Default = false -> max number of screens
		unlimitedWindows: true			// true / false. Default = false -> max number of text windows
		maskHardwareCoordinates: false	// true / false. Default = true -> will round screen display X coordinates and width to multiple of 16
		endian: "little"				// order of bytes in files: "big"-> as on Amiga "little"-> as on PC
	}

	// The display setup
	display:
	{
		tvStandard: "pal"				// 'pal' or 'ntsc' : drives the vertical size of the display. Has no effect in PC emulation.
		width: 1024						// Width of the canvas in the browser (ignored in full-page / full-screen)
		height: 720						// Height of the canvas in the browser (ignored in full-page / full-screen)
		background: "color"				// "color" or "transparent" (if transparent you can pile AMOS applications on on another in the browser)
		backgroundColor: "#000000"		// In full-page / full-screen will be the color of the 'black-bars' (if keepProportions = true)
		bodyBackgroundColor: "#000000"	// If NOT full-page / full-screen, this color will be the color of the 'body' part of the page. If not defined, it will be display.background
		bodyBackgroundImage: "./runtime/resources/star_night.jpeg"		// Path to an image to use as background to the web-page if NOT in full-page / full screen. Overwrites the previous property.
		scaleX: 3						// Scaling of canvas in the browser. Does not affect coordinates within the AMOS program
		scaleY: 3						// Scaling of canvas in the browser. Does not affect coordinates within the AMOS program
		screenScale: 2					// Internal scaling of screens. Improves readability does not affect AMOS program. 
										// 0-> the AMOS screen will be resized to the size of the canvas on screen 
										// (only in full-page/full-screen mode + PC mode and only if the screen 'hardware' coordinates X and Y are both 0)
										// 1-> the internal AMOS screen will be the same size as the size specified in Screen Open
										// 2-> the internal AMOS screen will be the size specified in Screen Open * 2 etc.
		fps: false						// Display FPS indicator on screen
		fpsFont: "12px Verdana"			// Font to use for FPS indicator
		fpsColor: "#FFFF00"				// Color of the FPS indicator
		fpsX: 10						// X position of the FPS indicator
		fpsY: 16						// Y position of the FPS indicator
		fullPage: false					// The display area will fit the browser page
		fullScreen: false				// Allows passage to full-screen by a user interaction if the application is ran in the browser (security measure), or goes direct in full-screen for wrapped executables.
		keepProportions: true			// For full-screen/full-page only, will maintain the width and height ratio calculated from the display.width / display.height value in this section. If not set, the display will match the size of the browser window and the application will be distorted.
		fullScreenIcon: true			// Displays a 'switch to full-screen' 'quit full-screen' icon if the application is in full-page / full-screen mode AND both "fullScreen" and "fullPage" are true
										// Image is resized to a size calculated from the current width of the browser window divided by the "display.width" property 
		fullScreenIconX: -34			// Horizontal position of the icon, positive means on the left, negative values are subtracted from the width of the browser window
		fullScreenIconY: 2				// Vertical position of the icon, positive means on the top, negative values are subtracted from the height of the browser window
		fullScreenIconImage: "./runtime/resources/full_screen.png"		// The path to the image to use for full-screen, can be semi-transparent, here 32x32
		smallScreenIconImage: "./runtime/resources/small_screen.png"	// The path to the image to use for quit full-screen, can be semi-transparent, here 32x32
	}

	// Sprites and bobs
	sprites:
	{
		collisionBoxed: false			// Only use box collision detection fast but imprecise
		collisionPrecision: 1			// Pixel-precision of the collisions. 1 = pixel per pixel 0.5 = 2 by 2 0.25 = 4 by 4 etc. 0.25 is good and 16 times faster...
										// Set it higher if you game contains small sprites... (for total compatibility with Amiga leave it to 1 images are small)
		collisionAlphaThreshold: 1		// Level of alpha for which a pixel is considered 'not transparent' and will generate a collision ( 0 being transparent and 255 being opaque)
	}

	// Fonts
	fonts:
	{	
		listFonts: "PC"					// "PC" or "Amiga" =Font$ will return extended information for PC and 40 characters strings for Amiga
		// Available Amiga fonts can be found in the "amos-2/fonts/amiga" folder.
		// Simply insert the name of the font in lowercase as found in the fonts/amiga 
		// folder and the compiler will do the rest!
		amiga: 
		[
			"topaz"
		]

		// Available Google Fonts can be found in the "amos-2/fonts/google" folder
		// Simply insert the name of the font in lowercase as found in the fonts/google folder
		// and here too the compiler will do the rest. Google Fonts are included in the application
		// itself will load fast and will also work offline...
		google:
		[
			"roboto mono"
		]
	}

	// Default settings
	default:
	{
		// Definition of the default screen here the basic AMOS red screen
		screen:
		{
			x: 0						// X Position in 'hardware' (Amiga sense of term) coordinates.
			y: 0						// Y Position in 'hardware' (Amiga sense of term) coordinates.
			width: 320					// Width in AMOS pixels
			height: 200					// Height in AMOS pixels
			numberOfColors: 32			// Number of colors
			pixelMode: "lowres"			// Resolution. 'lowres' 'hires' or 'lowres+laced' or 'hires+laced'
			palette:					// Default palette in Javascript colors
			[
				"#000000", "#0022CC", "#0011AA", "#223388", "#FF0000", "#00FF00", "#0000FF", "#666666",
				"#555555", "#333333", "#773333", "#337733", "#777733", "#333377", "#773377", "#337777",
				"#000000", "#EECC88", "#CC6600", "#EEAA00", "#2277FF", "#4499DD", "#55AAEE", "#AADDFF",
				"#BBDDFF", "#CCEEFF", "#FFFFFF", "#440088", "#AA00EE", "#EE00EE", "#EE0088", "#EEEEEE"
			]

			// The text window in the back of the screen where you can Print
			window:
			{
				x: 0
				y: 0
				fontWidth: 8							// Number of pixels the cursor is actually moved when printing one character
				fontHeight: 8							// Number of pixels the cursor is actually moved when printing one character
				border: 0
				paper: 0								// Please note the change in PC mode! Cursor is now independant of any color or palette.
				pen: 7									// Please note the change in PC mode! Cursor is now independant of any color or palette.
				background: "opaque"					// Not used (yet)
				font:  
				{
					name: "topaz"				// Upper or lower case does not matter. The font will be automatically added to the application
														// no need to include it in the 'fonts' section.
					type: "amiga"						// "amiga" or "google"
					height: 8    						// You need to find the correct value by trial and error! Has to be exact for large PC screens
														// where the text window can contain a lot of text (example 240 x 45 characters in 1920 x 720!)
				},

				cursorImage: "./runtime/resources/cursor_pc.png"	// The path to the image to use as cursor from the amos-2 folder. Can also be an absolute path.
				cursorColors: 										// New in manifest V6: list the colors AND alpha of the cursor (it is remapped)
				[													// You can now have as in V0.7 of AMOS-2 a semi-transparent cursor much more modern														
					{ r: 68, g:68, b:0, a: 128 }					// and less intrusive...
					{ r: 136, g:136, b:0, a: 128 }					// Put as many colors as you like! Colors are updated every FPS. At end of list, pointer resets to zero.
					{ r: 187, g:187, b:0, a: 128 }					// A white boring cursor is very possible, any shape, the shape being defined in 
					{ r: 221, g:221, b:0, a: 128 }					// the 'amos-2/runtime/resources/cursor.png' file, the picture being resized to the size indicated 
					{ r: 238, g:238, b:0, a: 128 }					// above in fontWidth and fontHeight. Keep it small, only two colors, transparent and $FFFFFF! ;)
					{ r: 255, g:255, b:34, a: 128 }
					{ r: 255, g:255, b:136, a: 128 }
					{ r: 255, g:255, b:204, a: 128 }
					{ r: 255, g:255, b:255, a: 128 }
					{ r: 170, g:170, b:255, a: 128 }
					{ r: 136, g:136, b:204, a: 128 }
					{ r: 102, g:102, b:170, a: 128 }
					{ r: 34, g:34, b:102, a: 128 }
					{ r: 0, g:0, b:68, a: 128 }
					{ r: 0, g:0, b:17, a: 128 }
					{ r: 0, g:0, b:0, a: 128 }
				]
			}
		}
	}
}
